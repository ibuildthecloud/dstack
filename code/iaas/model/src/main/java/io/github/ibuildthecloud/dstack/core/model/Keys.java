/**
 * This class is generated by jOOQ
 */
package io.github.ibuildthecloud.dstack.core.model;

/**
 * This class is generated by jOOQ.
 *
 * A class modelling foreign key relationships between tables of the <code>dstack</code> 
 * schema
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.AccountRecord, java.lang.Long> IDENTITY_ACCOUNT = Identities0.IDENTITY_ACCOUNT;
	public static final org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.AgentRecord, java.lang.Long> IDENTITY_AGENT = Identities0.IDENTITY_AGENT;
	public static final org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.AgentGroupRecord, java.lang.Long> IDENTITY_AGENT_GROUP = Identities0.IDENTITY_AGENT_GROUP;
	public static final org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.ConfigItemRecord, java.lang.Long> IDENTITY_CONFIG_ITEM = Identities0.IDENTITY_CONFIG_ITEM;
	public static final org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.ConfigItemStatusRecord, java.lang.Long> IDENTITY_CONFIG_ITEM_STATUS = Identities0.IDENTITY_CONFIG_ITEM_STATUS;
	public static final org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.CredentialRecord, java.lang.Long> IDENTITY_CREDENTIAL = Identities0.IDENTITY_CREDENTIAL;
	public static final org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.DataRecord, java.lang.Long> IDENTITY_DATA = Identities0.IDENTITY_DATA;
	public static final org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.ExternalHandlerRecord, java.lang.Long> IDENTITY_EXTERNAL_HANDLER = Identities0.IDENTITY_EXTERNAL_HANDLER;
	public static final org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord, java.lang.Long> IDENTITY_EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP = Identities0.IDENTITY_EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP;
	public static final org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.ExternalHandlerProcessRecord, java.lang.Long> IDENTITY_EXTERNAL_HANDLER_PROCESS = Identities0.IDENTITY_EXTERNAL_HANDLER_PROCESS;
	public static final org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.HostRecord, java.lang.Long> IDENTITY_HOST = Identities0.IDENTITY_HOST;
	public static final org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.ImageRecord, java.lang.Long> IDENTITY_IMAGE = Identities0.IDENTITY_IMAGE;
	public static final org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.ImageStoragePoolMapRecord, java.lang.Long> IDENTITY_IMAGE_STORAGE_POOL_MAP = Identities0.IDENTITY_IMAGE_STORAGE_POOL_MAP;
	public static final org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.InstanceRecord, java.lang.Long> IDENTITY_INSTANCE = Identities0.IDENTITY_INSTANCE;
	public static final org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.InstanceHostMapRecord, java.lang.Long> IDENTITY_INSTANCE_HOST_MAP = Identities0.IDENTITY_INSTANCE_HOST_MAP;
	public static final org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.OfferingRecord, java.lang.Long> IDENTITY_OFFERING = Identities0.IDENTITY_OFFERING;
	public static final org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.ProcessExecutionRecord, java.lang.Long> IDENTITY_PROCESS_EXECUTION = Identities0.IDENTITY_PROCESS_EXECUTION;
	public static final org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.ProcessInstanceRecord, java.lang.Long> IDENTITY_PROCESS_INSTANCE = Identities0.IDENTITY_PROCESS_INSTANCE;
	public static final org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.SettingRecord, java.lang.Long> IDENTITY_SETTING = Identities0.IDENTITY_SETTING;
	public static final org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolRecord, java.lang.Long> IDENTITY_STORAGE_POOL = Identities0.IDENTITY_STORAGE_POOL;
	public static final org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolHostMapRecord, java.lang.Long> IDENTITY_STORAGE_POOL_HOST_MAP = Identities0.IDENTITY_STORAGE_POOL_HOST_MAP;
	public static final org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.TaskRecord, java.lang.Long> IDENTITY_TASK = Identities0.IDENTITY_TASK;
	public static final org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.TaskInstanceRecord, java.lang.Long> IDENTITY_TASK_INSTANCE = Identities0.IDENTITY_TASK_INSTANCE;
	public static final org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeRecord, java.lang.Long> IDENTITY_VOLUME = Identities0.IDENTITY_VOLUME;
	public static final org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeStoragePoolMapRecord, java.lang.Long> IDENTITY_VOLUME_STORAGE_POOL_MAP = Identities0.IDENTITY_VOLUME_STORAGE_POOL_MAP;
	public static final org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.ZoneRecord, java.lang.Long> IDENTITY_ZONE = Identities0.IDENTITY_ZONE;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.AccountRecord> KEY_ACCOUNT_PRIMARY = UniqueKeys0.KEY_ACCOUNT_PRIMARY;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.AccountRecord> KEY_ACCOUNT_IDX_ACCOUNT_UUID = UniqueKeys0.KEY_ACCOUNT_IDX_ACCOUNT_UUID;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.AgentRecord> KEY_AGENT_PRIMARY = UniqueKeys0.KEY_AGENT_PRIMARY;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.AgentRecord> KEY_AGENT_IDX_AGENT_UUID = UniqueKeys0.KEY_AGENT_IDX_AGENT_UUID;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.AgentGroupRecord> KEY_AGENT_GROUP_PRIMARY = UniqueKeys0.KEY_AGENT_GROUP_PRIMARY;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.AgentGroupRecord> KEY_AGENT_GROUP_IDX_AGENT_GROUP_UUID = UniqueKeys0.KEY_AGENT_GROUP_IDX_AGENT_GROUP_UUID;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ConfigItemRecord> KEY_CONFIG_ITEM_PRIMARY = UniqueKeys0.KEY_CONFIG_ITEM_PRIMARY;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ConfigItemRecord> KEY_CONFIG_ITEM_IDX_CONFIG_ITEM__NAME = UniqueKeys0.KEY_CONFIG_ITEM_IDX_CONFIG_ITEM__NAME;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ConfigItemStatusRecord> KEY_CONFIG_ITEM_STATUS_PRIMARY = UniqueKeys0.KEY_CONFIG_ITEM_STATUS_PRIMARY;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ConfigItemStatusRecord> KEY_CONFIG_ITEM_STATUS_IDX_CONFIG_ITEM_STATUS_NAME_AGENT_ID = UniqueKeys0.KEY_CONFIG_ITEM_STATUS_IDX_CONFIG_ITEM_STATUS_NAME_AGENT_ID;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.CredentialRecord> KEY_CREDENTIAL_PRIMARY = UniqueKeys0.KEY_CREDENTIAL_PRIMARY;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.CredentialRecord> KEY_CREDENTIAL_IDX_CREDENTIAL_UUID = UniqueKeys0.KEY_CREDENTIAL_IDX_CREDENTIAL_UUID;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.DataRecord> KEY_DATA_PRIMARY = UniqueKeys0.KEY_DATA_PRIMARY;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.DataRecord> KEY_DATA_IDX_DATA_NAME = UniqueKeys0.KEY_DATA_IDX_DATA_NAME;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.DatabasechangeloglockRecord> KEY_DATABASECHANGELOGLOCK_PRIMARY = UniqueKeys0.KEY_DATABASECHANGELOGLOCK_PRIMARY;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ExternalHandlerRecord> KEY_EXTERNAL_HANDLER_PRIMARY = UniqueKeys0.KEY_EXTERNAL_HANDLER_PRIMARY;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ExternalHandlerRecord> KEY_EXTERNAL_HANDLER_IDX_EXTERNAL_HANDLER_UUID = UniqueKeys0.KEY_EXTERNAL_HANDLER_IDX_EXTERNAL_HANDLER_UUID;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord> KEY_EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP_PRIMARY = UniqueKeys0.KEY_EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord> KEY_EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP_IDX_EH_EH_PROCESS_MAP_UUID = UniqueKeys0.KEY_EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP_IDX_EH_EH_PROCESS_MAP_UUID;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ExternalHandlerProcessRecord> KEY_EXTERNAL_HANDLER_PROCESS_PRIMARY = UniqueKeys0.KEY_EXTERNAL_HANDLER_PROCESS_PRIMARY;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ExternalHandlerProcessRecord> KEY_EXTERNAL_HANDLER_PROCESS_IDX_EXTERNAL_HANDLER_PROCESS_UUID = UniqueKeys0.KEY_EXTERNAL_HANDLER_PROCESS_IDX_EXTERNAL_HANDLER_PROCESS_UUID;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.HostRecord> KEY_HOST_PRIMARY = UniqueKeys0.KEY_HOST_PRIMARY;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.HostRecord> KEY_HOST_IDX_HOST_UUID = UniqueKeys0.KEY_HOST_IDX_HOST_UUID;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ImageRecord> KEY_IMAGE_PRIMARY = UniqueKeys0.KEY_IMAGE_PRIMARY;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ImageRecord> KEY_IMAGE_IDX_IMAGE_UUID = UniqueKeys0.KEY_IMAGE_IDX_IMAGE_UUID;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ImageStoragePoolMapRecord> KEY_IMAGE_STORAGE_POOL_MAP_PRIMARY = UniqueKeys0.KEY_IMAGE_STORAGE_POOL_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ImageStoragePoolMapRecord> KEY_IMAGE_STORAGE_POOL_MAP_IDX_IMAGE_STORAGE_POOL_MAP_UUID = UniqueKeys0.KEY_IMAGE_STORAGE_POOL_MAP_IDX_IMAGE_STORAGE_POOL_MAP_UUID;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.InstanceRecord> KEY_INSTANCE_PRIMARY = UniqueKeys0.KEY_INSTANCE_PRIMARY;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.InstanceRecord> KEY_INSTANCE_IDX_INSTANCE_UUID = UniqueKeys0.KEY_INSTANCE_IDX_INSTANCE_UUID;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.InstanceHostMapRecord> KEY_INSTANCE_HOST_MAP_PRIMARY = UniqueKeys0.KEY_INSTANCE_HOST_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.InstanceHostMapRecord> KEY_INSTANCE_HOST_MAP_IDX_INSTANCE_HOST_MAP_UUID = UniqueKeys0.KEY_INSTANCE_HOST_MAP_IDX_INSTANCE_HOST_MAP_UUID;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.OfferingRecord> KEY_OFFERING_PRIMARY = UniqueKeys0.KEY_OFFERING_PRIMARY;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.OfferingRecord> KEY_OFFERING_IDX_OFFERING_UUID = UniqueKeys0.KEY_OFFERING_IDX_OFFERING_UUID;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ProcessExecutionRecord> KEY_PROCESS_EXECUTION_PRIMARY = UniqueKeys0.KEY_PROCESS_EXECUTION_PRIMARY;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ProcessExecutionRecord> KEY_PROCESS_EXECUTION_IDX_PROCESS_EXECUTION__UUID = UniqueKeys0.KEY_PROCESS_EXECUTION_IDX_PROCESS_EXECUTION__UUID;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ProcessInstanceRecord> KEY_PROCESS_INSTANCE_PRIMARY = UniqueKeys0.KEY_PROCESS_INSTANCE_PRIMARY;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.SettingRecord> KEY_SETTING_PRIMARY = UniqueKeys0.KEY_SETTING_PRIMARY;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolRecord> KEY_STORAGE_POOL_PRIMARY = UniqueKeys0.KEY_STORAGE_POOL_PRIMARY;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolRecord> KEY_STORAGE_POOL_IDX_STORAGE_POOL_UUID = UniqueKeys0.KEY_STORAGE_POOL_IDX_STORAGE_POOL_UUID;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolHostMapRecord> KEY_STORAGE_POOL_HOST_MAP_PRIMARY = UniqueKeys0.KEY_STORAGE_POOL_HOST_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolHostMapRecord> KEY_STORAGE_POOL_HOST_MAP_IDX_STORAGE_POOL_HOST_MAP_UUID = UniqueKeys0.KEY_STORAGE_POOL_HOST_MAP_IDX_STORAGE_POOL_HOST_MAP_UUID;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.TaskRecord> KEY_TASK_PRIMARY = UniqueKeys0.KEY_TASK_PRIMARY;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.TaskRecord> KEY_TASK_IDX_TASK_NAME = UniqueKeys0.KEY_TASK_IDX_TASK_NAME;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.TaskInstanceRecord> KEY_TASK_INSTANCE_PRIMARY = UniqueKeys0.KEY_TASK_INSTANCE_PRIMARY;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeRecord> KEY_VOLUME_PRIMARY = UniqueKeys0.KEY_VOLUME_PRIMARY;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeRecord> KEY_VOLUME_IDX_VOLUME_UUID = UniqueKeys0.KEY_VOLUME_IDX_VOLUME_UUID;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeStoragePoolMapRecord> KEY_VOLUME_STORAGE_POOL_MAP_PRIMARY = UniqueKeys0.KEY_VOLUME_STORAGE_POOL_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeStoragePoolMapRecord> KEY_VOLUME_STORAGE_POOL_MAP_IDX_VOLUME_STORAGE_POOL_MAP_UUID = UniqueKeys0.KEY_VOLUME_STORAGE_POOL_MAP_IDX_VOLUME_STORAGE_POOL_MAP_UUID;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ZoneRecord> KEY_ZONE_PRIMARY = UniqueKeys0.KEY_ZONE_PRIMARY;
	public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ZoneRecord> KEY_ZONE_IDX_ZONE_UUID = UniqueKeys0.KEY_ZONE_IDX_ZONE_UUID;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.AgentRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.AccountRecord> FK_AGENT__ACCOUNT_ID = ForeignKeys0.FK_AGENT__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.AgentRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.AgentGroupRecord> FK_AGENT__AGENT_GROUP_ID = ForeignKeys0.FK_AGENT__AGENT_GROUP_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.AgentRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.ZoneRecord> FK_AGENT__ZONE_ID = ForeignKeys0.FK_AGENT__ZONE_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.AgentGroupRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.AccountRecord> FK_AGENT_GROUP__ACCOUNT_ID = ForeignKeys0.FK_AGENT_GROUP__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ConfigItemStatusRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.ConfigItemRecord> FK_CONFIG_ITEM__NAME = ForeignKeys0.FK_CONFIG_ITEM__NAME;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ConfigItemStatusRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.AgentRecord> FK_CONFIG_ITEM__AGENT_ID = ForeignKeys0.FK_CONFIG_ITEM__AGENT_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.CredentialRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.AccountRecord> FK_CREDENTIAL__ACCOUNT_ID = ForeignKeys0.FK_CREDENTIAL__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.ExternalHandlerRecord> FK_EH_EH_PROCESS_MAP__EXTERNAL_HANDLER_ID = ForeignKeys0.FK_EH_EH_PROCESS_MAP__EXTERNAL_HANDLER_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.ExternalHandlerProcessRecord> FK_EH_EH_PROCESS_MAP__EXTERNAL_HANDLER_PROCESS_ID = ForeignKeys0.FK_EH_EH_PROCESS_MAP__EXTERNAL_HANDLER_PROCESS_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.HostRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.AccountRecord> FK_HOST__ACCOUNT_ID = ForeignKeys0.FK_HOST__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.HostRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.AgentRecord> FK_HOST__AGENT_ID = ForeignKeys0.FK_HOST__AGENT_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.HostRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.ZoneRecord> FK_HOST__ZONE_ID = ForeignKeys0.FK_HOST__ZONE_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ImageRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.AccountRecord> FK_IMAGE__ACCOUNT_ID = ForeignKeys0.FK_IMAGE__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ImageStoragePoolMapRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.ImageRecord> FK_IMAGE_STORAGE_POOL_MAP__IMAGE_ID = ForeignKeys0.FK_IMAGE_STORAGE_POOL_MAP__IMAGE_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ImageStoragePoolMapRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolRecord> FK_IMAGE_STORAGE_POOL_MAP__STORAGE_POOL_ID = ForeignKeys0.FK_IMAGE_STORAGE_POOL_MAP__STORAGE_POOL_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.InstanceRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.AccountRecord> FK_INSTANCE__ACCOUNT_ID = ForeignKeys0.FK_INSTANCE__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.InstanceRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.ImageRecord> FK_INSTANCE__IMAGE_ID = ForeignKeys0.FK_INSTANCE__IMAGE_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.InstanceRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.OfferingRecord> FK_INSTANCE__OFFERING_ID = ForeignKeys0.FK_INSTANCE__OFFERING_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.InstanceRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.ZoneRecord> FK_INSTANCE__ZONE_ID = ForeignKeys0.FK_INSTANCE__ZONE_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.InstanceHostMapRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.InstanceRecord> FK_INSTANCE_HOST_MAP__INSTANCE_ID = ForeignKeys0.FK_INSTANCE_HOST_MAP__INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.InstanceHostMapRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.HostRecord> FK_INSTANCE_HOST_MAP__HOST_ID = ForeignKeys0.FK_INSTANCE_HOST_MAP__HOST_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.OfferingRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.AccountRecord> FK_OFFERING__ACCOUNT_ID = ForeignKeys0.FK_OFFERING__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ProcessExecutionRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.ProcessInstanceRecord> FK_PROCESS_EXECUTION_PROCESS_INSTANCE_ID = ForeignKeys0.FK_PROCESS_EXECUTION_PROCESS_INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.AccountRecord> FK_STORAGE_POOL__ACCOUNT_ID = ForeignKeys0.FK_STORAGE_POOL__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.AgentRecord> FK_STORAGE_POOL__AGENT_ID = ForeignKeys0.FK_STORAGE_POOL__AGENT_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.ZoneRecord> FK_STORAGE_POOL__ZONE_ID = ForeignKeys0.FK_STORAGE_POOL__ZONE_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolHostMapRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolRecord> FK_STORAGE_POOL_HOST_MAP__STORAGE_POOL_ID = ForeignKeys0.FK_STORAGE_POOL_HOST_MAP__STORAGE_POOL_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolHostMapRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.HostRecord> FK_STORAGE_POOL_HOST_MAP__HOST_ID = ForeignKeys0.FK_STORAGE_POOL_HOST_MAP__HOST_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.TaskInstanceRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.TaskRecord> FK_TASK_INSTANCE__TASK_ID = ForeignKeys0.FK_TASK_INSTANCE__TASK_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.AccountRecord> FK_VOLUME__ACCOUNT_ID = ForeignKeys0.FK_VOLUME__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.InstanceRecord> FK_VOLUME__INSTANCE_ID = ForeignKeys0.FK_VOLUME__INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.ImageRecord> FK_VOLUME__IMAGE_ID = ForeignKeys0.FK_VOLUME__IMAGE_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.OfferingRecord> FK_VOLUME__OFFERING_ID = ForeignKeys0.FK_VOLUME__OFFERING_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.ZoneRecord> FK_VOLUME__ZONE_ID = ForeignKeys0.FK_VOLUME__ZONE_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeStoragePoolMapRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeRecord> FK_VOLUME_STORAGE_POOL_MAP__VOLUME_ID = ForeignKeys0.FK_VOLUME_STORAGE_POOL_MAP__VOLUME_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeStoragePoolMapRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolRecord> FK_VOLUME_STORAGE_POOL_MAP__STORAGE_POOL_ID = ForeignKeys0.FK_VOLUME_STORAGE_POOL_MAP__STORAGE_POOL_ID;
	public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ZoneRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.AccountRecord> FK_ZONE__ACCOUNT_ID = ForeignKeys0.FK_ZONE__ACCOUNT_ID;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends org.jooq.impl.AbstractKeys {
		public static org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.AccountRecord, java.lang.Long> IDENTITY_ACCOUNT = createIdentity(io.github.ibuildthecloud.dstack.core.model.tables.AccountTable.ACCOUNT, io.github.ibuildthecloud.dstack.core.model.tables.AccountTable.ACCOUNT.ID);
		public static org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.AgentRecord, java.lang.Long> IDENTITY_AGENT = createIdentity(io.github.ibuildthecloud.dstack.core.model.tables.AgentTable.AGENT, io.github.ibuildthecloud.dstack.core.model.tables.AgentTable.AGENT.ID);
		public static org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.AgentGroupRecord, java.lang.Long> IDENTITY_AGENT_GROUP = createIdentity(io.github.ibuildthecloud.dstack.core.model.tables.AgentGroupTable.AGENT_GROUP, io.github.ibuildthecloud.dstack.core.model.tables.AgentGroupTable.AGENT_GROUP.ID);
		public static org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.ConfigItemRecord, java.lang.Long> IDENTITY_CONFIG_ITEM = createIdentity(io.github.ibuildthecloud.dstack.core.model.tables.ConfigItemTable.CONFIG_ITEM, io.github.ibuildthecloud.dstack.core.model.tables.ConfigItemTable.CONFIG_ITEM.ID);
		public static org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.ConfigItemStatusRecord, java.lang.Long> IDENTITY_CONFIG_ITEM_STATUS = createIdentity(io.github.ibuildthecloud.dstack.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS, io.github.ibuildthecloud.dstack.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS.ID);
		public static org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.CredentialRecord, java.lang.Long> IDENTITY_CREDENTIAL = createIdentity(io.github.ibuildthecloud.dstack.core.model.tables.CredentialTable.CREDENTIAL, io.github.ibuildthecloud.dstack.core.model.tables.CredentialTable.CREDENTIAL.ID);
		public static org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.DataRecord, java.lang.Long> IDENTITY_DATA = createIdentity(io.github.ibuildthecloud.dstack.core.model.tables.DataTable.DATA, io.github.ibuildthecloud.dstack.core.model.tables.DataTable.DATA.ID);
		public static org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.ExternalHandlerRecord, java.lang.Long> IDENTITY_EXTERNAL_HANDLER = createIdentity(io.github.ibuildthecloud.dstack.core.model.tables.ExternalHandlerTable.EXTERNAL_HANDLER, io.github.ibuildthecloud.dstack.core.model.tables.ExternalHandlerTable.EXTERNAL_HANDLER.ID);
		public static org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord, java.lang.Long> IDENTITY_EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP = createIdentity(io.github.ibuildthecloud.dstack.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP, io.github.ibuildthecloud.dstack.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP.ID);
		public static org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.ExternalHandlerProcessRecord, java.lang.Long> IDENTITY_EXTERNAL_HANDLER_PROCESS = createIdentity(io.github.ibuildthecloud.dstack.core.model.tables.ExternalHandlerProcessTable.EXTERNAL_HANDLER_PROCESS, io.github.ibuildthecloud.dstack.core.model.tables.ExternalHandlerProcessTable.EXTERNAL_HANDLER_PROCESS.ID);
		public static org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.HostRecord, java.lang.Long> IDENTITY_HOST = createIdentity(io.github.ibuildthecloud.dstack.core.model.tables.HostTable.HOST, io.github.ibuildthecloud.dstack.core.model.tables.HostTable.HOST.ID);
		public static org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.ImageRecord, java.lang.Long> IDENTITY_IMAGE = createIdentity(io.github.ibuildthecloud.dstack.core.model.tables.ImageTable.IMAGE, io.github.ibuildthecloud.dstack.core.model.tables.ImageTable.IMAGE.ID);
		public static org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.ImageStoragePoolMapRecord, java.lang.Long> IDENTITY_IMAGE_STORAGE_POOL_MAP = createIdentity(io.github.ibuildthecloud.dstack.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP, io.github.ibuildthecloud.dstack.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP.ID);
		public static org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.InstanceRecord, java.lang.Long> IDENTITY_INSTANCE = createIdentity(io.github.ibuildthecloud.dstack.core.model.tables.InstanceTable.INSTANCE, io.github.ibuildthecloud.dstack.core.model.tables.InstanceTable.INSTANCE.ID);
		public static org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.InstanceHostMapRecord, java.lang.Long> IDENTITY_INSTANCE_HOST_MAP = createIdentity(io.github.ibuildthecloud.dstack.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP, io.github.ibuildthecloud.dstack.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP.ID);
		public static org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.OfferingRecord, java.lang.Long> IDENTITY_OFFERING = createIdentity(io.github.ibuildthecloud.dstack.core.model.tables.OfferingTable.OFFERING, io.github.ibuildthecloud.dstack.core.model.tables.OfferingTable.OFFERING.ID);
		public static org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.ProcessExecutionRecord, java.lang.Long> IDENTITY_PROCESS_EXECUTION = createIdentity(io.github.ibuildthecloud.dstack.core.model.tables.ProcessExecutionTable.PROCESS_EXECUTION, io.github.ibuildthecloud.dstack.core.model.tables.ProcessExecutionTable.PROCESS_EXECUTION.ID);
		public static org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.ProcessInstanceRecord, java.lang.Long> IDENTITY_PROCESS_INSTANCE = createIdentity(io.github.ibuildthecloud.dstack.core.model.tables.ProcessInstanceTable.PROCESS_INSTANCE, io.github.ibuildthecloud.dstack.core.model.tables.ProcessInstanceTable.PROCESS_INSTANCE.ID);
		public static org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.SettingRecord, java.lang.Long> IDENTITY_SETTING = createIdentity(io.github.ibuildthecloud.dstack.core.model.tables.SettingTable.SETTING, io.github.ibuildthecloud.dstack.core.model.tables.SettingTable.SETTING.ID);
		public static org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolRecord, java.lang.Long> IDENTITY_STORAGE_POOL = createIdentity(io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolTable.STORAGE_POOL, io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolTable.STORAGE_POOL.ID);
		public static org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolHostMapRecord, java.lang.Long> IDENTITY_STORAGE_POOL_HOST_MAP = createIdentity(io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP, io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP.ID);
		public static org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.TaskRecord, java.lang.Long> IDENTITY_TASK = createIdentity(io.github.ibuildthecloud.dstack.core.model.tables.TaskTable.TASK, io.github.ibuildthecloud.dstack.core.model.tables.TaskTable.TASK.ID);
		public static org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.TaskInstanceRecord, java.lang.Long> IDENTITY_TASK_INSTANCE = createIdentity(io.github.ibuildthecloud.dstack.core.model.tables.TaskInstanceTable.TASK_INSTANCE, io.github.ibuildthecloud.dstack.core.model.tables.TaskInstanceTable.TASK_INSTANCE.ID);
		public static org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeRecord, java.lang.Long> IDENTITY_VOLUME = createIdentity(io.github.ibuildthecloud.dstack.core.model.tables.VolumeTable.VOLUME, io.github.ibuildthecloud.dstack.core.model.tables.VolumeTable.VOLUME.ID);
		public static org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeStoragePoolMapRecord, java.lang.Long> IDENTITY_VOLUME_STORAGE_POOL_MAP = createIdentity(io.github.ibuildthecloud.dstack.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP, io.github.ibuildthecloud.dstack.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP.ID);
		public static org.jooq.Identity<io.github.ibuildthecloud.dstack.core.model.tables.records.ZoneRecord, java.lang.Long> IDENTITY_ZONE = createIdentity(io.github.ibuildthecloud.dstack.core.model.tables.ZoneTable.ZONE, io.github.ibuildthecloud.dstack.core.model.tables.ZoneTable.ZONE.ID);
	}

	private static class UniqueKeys0 extends org.jooq.impl.AbstractKeys {
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.AccountRecord> KEY_ACCOUNT_PRIMARY = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.AccountTable.ACCOUNT, io.github.ibuildthecloud.dstack.core.model.tables.AccountTable.ACCOUNT.ID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.AccountRecord> KEY_ACCOUNT_IDX_ACCOUNT_UUID = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.AccountTable.ACCOUNT, io.github.ibuildthecloud.dstack.core.model.tables.AccountTable.ACCOUNT.UUID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.AgentRecord> KEY_AGENT_PRIMARY = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.AgentTable.AGENT, io.github.ibuildthecloud.dstack.core.model.tables.AgentTable.AGENT.ID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.AgentRecord> KEY_AGENT_IDX_AGENT_UUID = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.AgentTable.AGENT, io.github.ibuildthecloud.dstack.core.model.tables.AgentTable.AGENT.UUID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.AgentGroupRecord> KEY_AGENT_GROUP_PRIMARY = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.AgentGroupTable.AGENT_GROUP, io.github.ibuildthecloud.dstack.core.model.tables.AgentGroupTable.AGENT_GROUP.ID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.AgentGroupRecord> KEY_AGENT_GROUP_IDX_AGENT_GROUP_UUID = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.AgentGroupTable.AGENT_GROUP, io.github.ibuildthecloud.dstack.core.model.tables.AgentGroupTable.AGENT_GROUP.UUID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ConfigItemRecord> KEY_CONFIG_ITEM_PRIMARY = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.ConfigItemTable.CONFIG_ITEM, io.github.ibuildthecloud.dstack.core.model.tables.ConfigItemTable.CONFIG_ITEM.ID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ConfigItemRecord> KEY_CONFIG_ITEM_IDX_CONFIG_ITEM__NAME = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.ConfigItemTable.CONFIG_ITEM, io.github.ibuildthecloud.dstack.core.model.tables.ConfigItemTable.CONFIG_ITEM.NAME);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ConfigItemStatusRecord> KEY_CONFIG_ITEM_STATUS_PRIMARY = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS, io.github.ibuildthecloud.dstack.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS.ID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ConfigItemStatusRecord> KEY_CONFIG_ITEM_STATUS_IDX_CONFIG_ITEM_STATUS_NAME_AGENT_ID = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS, io.github.ibuildthecloud.dstack.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS.NAME, io.github.ibuildthecloud.dstack.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS.AGENT_ID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.CredentialRecord> KEY_CREDENTIAL_PRIMARY = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.CredentialTable.CREDENTIAL, io.github.ibuildthecloud.dstack.core.model.tables.CredentialTable.CREDENTIAL.ID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.CredentialRecord> KEY_CREDENTIAL_IDX_CREDENTIAL_UUID = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.CredentialTable.CREDENTIAL, io.github.ibuildthecloud.dstack.core.model.tables.CredentialTable.CREDENTIAL.UUID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.DataRecord> KEY_DATA_PRIMARY = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.DataTable.DATA, io.github.ibuildthecloud.dstack.core.model.tables.DataTable.DATA.ID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.DataRecord> KEY_DATA_IDX_DATA_NAME = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.DataTable.DATA, io.github.ibuildthecloud.dstack.core.model.tables.DataTable.DATA.NAME);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.DatabasechangeloglockRecord> KEY_DATABASECHANGELOGLOCK_PRIMARY = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.DatabasechangeloglockTable.DATABASECHANGELOGLOCK, io.github.ibuildthecloud.dstack.core.model.tables.DatabasechangeloglockTable.DATABASECHANGELOGLOCK.ID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ExternalHandlerRecord> KEY_EXTERNAL_HANDLER_PRIMARY = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.ExternalHandlerTable.EXTERNAL_HANDLER, io.github.ibuildthecloud.dstack.core.model.tables.ExternalHandlerTable.EXTERNAL_HANDLER.ID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ExternalHandlerRecord> KEY_EXTERNAL_HANDLER_IDX_EXTERNAL_HANDLER_UUID = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.ExternalHandlerTable.EXTERNAL_HANDLER, io.github.ibuildthecloud.dstack.core.model.tables.ExternalHandlerTable.EXTERNAL_HANDLER.UUID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord> KEY_EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP_PRIMARY = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP, io.github.ibuildthecloud.dstack.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP.ID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord> KEY_EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP_IDX_EH_EH_PROCESS_MAP_UUID = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP, io.github.ibuildthecloud.dstack.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP.UUID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ExternalHandlerProcessRecord> KEY_EXTERNAL_HANDLER_PROCESS_PRIMARY = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.ExternalHandlerProcessTable.EXTERNAL_HANDLER_PROCESS, io.github.ibuildthecloud.dstack.core.model.tables.ExternalHandlerProcessTable.EXTERNAL_HANDLER_PROCESS.ID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ExternalHandlerProcessRecord> KEY_EXTERNAL_HANDLER_PROCESS_IDX_EXTERNAL_HANDLER_PROCESS_UUID = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.ExternalHandlerProcessTable.EXTERNAL_HANDLER_PROCESS, io.github.ibuildthecloud.dstack.core.model.tables.ExternalHandlerProcessTable.EXTERNAL_HANDLER_PROCESS.UUID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.HostRecord> KEY_HOST_PRIMARY = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.HostTable.HOST, io.github.ibuildthecloud.dstack.core.model.tables.HostTable.HOST.ID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.HostRecord> KEY_HOST_IDX_HOST_UUID = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.HostTable.HOST, io.github.ibuildthecloud.dstack.core.model.tables.HostTable.HOST.UUID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ImageRecord> KEY_IMAGE_PRIMARY = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.ImageTable.IMAGE, io.github.ibuildthecloud.dstack.core.model.tables.ImageTable.IMAGE.ID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ImageRecord> KEY_IMAGE_IDX_IMAGE_UUID = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.ImageTable.IMAGE, io.github.ibuildthecloud.dstack.core.model.tables.ImageTable.IMAGE.UUID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ImageStoragePoolMapRecord> KEY_IMAGE_STORAGE_POOL_MAP_PRIMARY = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP, io.github.ibuildthecloud.dstack.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP.ID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ImageStoragePoolMapRecord> KEY_IMAGE_STORAGE_POOL_MAP_IDX_IMAGE_STORAGE_POOL_MAP_UUID = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP, io.github.ibuildthecloud.dstack.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP.UUID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.InstanceRecord> KEY_INSTANCE_PRIMARY = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.InstanceTable.INSTANCE, io.github.ibuildthecloud.dstack.core.model.tables.InstanceTable.INSTANCE.ID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.InstanceRecord> KEY_INSTANCE_IDX_INSTANCE_UUID = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.InstanceTable.INSTANCE, io.github.ibuildthecloud.dstack.core.model.tables.InstanceTable.INSTANCE.UUID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.InstanceHostMapRecord> KEY_INSTANCE_HOST_MAP_PRIMARY = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP, io.github.ibuildthecloud.dstack.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP.ID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.InstanceHostMapRecord> KEY_INSTANCE_HOST_MAP_IDX_INSTANCE_HOST_MAP_UUID = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP, io.github.ibuildthecloud.dstack.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP.UUID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.OfferingRecord> KEY_OFFERING_PRIMARY = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.OfferingTable.OFFERING, io.github.ibuildthecloud.dstack.core.model.tables.OfferingTable.OFFERING.ID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.OfferingRecord> KEY_OFFERING_IDX_OFFERING_UUID = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.OfferingTable.OFFERING, io.github.ibuildthecloud.dstack.core.model.tables.OfferingTable.OFFERING.UUID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ProcessExecutionRecord> KEY_PROCESS_EXECUTION_PRIMARY = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.ProcessExecutionTable.PROCESS_EXECUTION, io.github.ibuildthecloud.dstack.core.model.tables.ProcessExecutionTable.PROCESS_EXECUTION.ID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ProcessExecutionRecord> KEY_PROCESS_EXECUTION_IDX_PROCESS_EXECUTION__UUID = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.ProcessExecutionTable.PROCESS_EXECUTION, io.github.ibuildthecloud.dstack.core.model.tables.ProcessExecutionTable.PROCESS_EXECUTION.UUID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ProcessInstanceRecord> KEY_PROCESS_INSTANCE_PRIMARY = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.ProcessInstanceTable.PROCESS_INSTANCE, io.github.ibuildthecloud.dstack.core.model.tables.ProcessInstanceTable.PROCESS_INSTANCE.ID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.SettingRecord> KEY_SETTING_PRIMARY = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.SettingTable.SETTING, io.github.ibuildthecloud.dstack.core.model.tables.SettingTable.SETTING.ID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolRecord> KEY_STORAGE_POOL_PRIMARY = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolTable.STORAGE_POOL, io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolTable.STORAGE_POOL.ID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolRecord> KEY_STORAGE_POOL_IDX_STORAGE_POOL_UUID = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolTable.STORAGE_POOL, io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolTable.STORAGE_POOL.UUID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolHostMapRecord> KEY_STORAGE_POOL_HOST_MAP_PRIMARY = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP, io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP.ID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolHostMapRecord> KEY_STORAGE_POOL_HOST_MAP_IDX_STORAGE_POOL_HOST_MAP_UUID = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP, io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP.UUID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.TaskRecord> KEY_TASK_PRIMARY = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.TaskTable.TASK, io.github.ibuildthecloud.dstack.core.model.tables.TaskTable.TASK.ID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.TaskRecord> KEY_TASK_IDX_TASK_NAME = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.TaskTable.TASK, io.github.ibuildthecloud.dstack.core.model.tables.TaskTable.TASK.NAME);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.TaskInstanceRecord> KEY_TASK_INSTANCE_PRIMARY = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.TaskInstanceTable.TASK_INSTANCE, io.github.ibuildthecloud.dstack.core.model.tables.TaskInstanceTable.TASK_INSTANCE.ID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeRecord> KEY_VOLUME_PRIMARY = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.VolumeTable.VOLUME, io.github.ibuildthecloud.dstack.core.model.tables.VolumeTable.VOLUME.ID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeRecord> KEY_VOLUME_IDX_VOLUME_UUID = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.VolumeTable.VOLUME, io.github.ibuildthecloud.dstack.core.model.tables.VolumeTable.VOLUME.UUID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeStoragePoolMapRecord> KEY_VOLUME_STORAGE_POOL_MAP_PRIMARY = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP, io.github.ibuildthecloud.dstack.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP.ID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeStoragePoolMapRecord> KEY_VOLUME_STORAGE_POOL_MAP_IDX_VOLUME_STORAGE_POOL_MAP_UUID = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP, io.github.ibuildthecloud.dstack.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP.UUID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ZoneRecord> KEY_ZONE_PRIMARY = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.ZoneTable.ZONE, io.github.ibuildthecloud.dstack.core.model.tables.ZoneTable.ZONE.ID);
		public static final org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ZoneRecord> KEY_ZONE_IDX_ZONE_UUID = createUniqueKey(io.github.ibuildthecloud.dstack.core.model.tables.ZoneTable.ZONE, io.github.ibuildthecloud.dstack.core.model.tables.ZoneTable.ZONE.UUID);
	}

	private static class ForeignKeys0 extends org.jooq.impl.AbstractKeys {
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.AgentRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.AccountRecord> FK_AGENT__ACCOUNT_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.AgentTable.AGENT, io.github.ibuildthecloud.dstack.core.model.tables.AgentTable.AGENT.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.AgentRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.AgentGroupRecord> FK_AGENT__AGENT_GROUP_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_AGENT_GROUP_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.AgentTable.AGENT, io.github.ibuildthecloud.dstack.core.model.tables.AgentTable.AGENT.AGENT_GROUP_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.AgentRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.ZoneRecord> FK_AGENT__ZONE_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_ZONE_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.AgentTable.AGENT, io.github.ibuildthecloud.dstack.core.model.tables.AgentTable.AGENT.ZONE_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.AgentGroupRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.AccountRecord> FK_AGENT_GROUP__ACCOUNT_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.AgentGroupTable.AGENT_GROUP, io.github.ibuildthecloud.dstack.core.model.tables.AgentGroupTable.AGENT_GROUP.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ConfigItemStatusRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.ConfigItemRecord> FK_CONFIG_ITEM__NAME = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_CONFIG_ITEM_IDX_CONFIG_ITEM__NAME, io.github.ibuildthecloud.dstack.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS, io.github.ibuildthecloud.dstack.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS.NAME);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ConfigItemStatusRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.AgentRecord> FK_CONFIG_ITEM__AGENT_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_AGENT_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS, io.github.ibuildthecloud.dstack.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS.AGENT_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.CredentialRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.AccountRecord> FK_CREDENTIAL__ACCOUNT_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.CredentialTable.CREDENTIAL, io.github.ibuildthecloud.dstack.core.model.tables.CredentialTable.CREDENTIAL.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.ExternalHandlerRecord> FK_EH_EH_PROCESS_MAP__EXTERNAL_HANDLER_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_EXTERNAL_HANDLER_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP, io.github.ibuildthecloud.dstack.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP.EXTERNAL_HANDLER_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.ExternalHandlerProcessRecord> FK_EH_EH_PROCESS_MAP__EXTERNAL_HANDLER_PROCESS_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_EXTERNAL_HANDLER_PROCESS_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP, io.github.ibuildthecloud.dstack.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP.EXTERNAL_HANDLER_PROCESS_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.HostRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.AccountRecord> FK_HOST__ACCOUNT_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.HostTable.HOST, io.github.ibuildthecloud.dstack.core.model.tables.HostTable.HOST.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.HostRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.AgentRecord> FK_HOST__AGENT_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_AGENT_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.HostTable.HOST, io.github.ibuildthecloud.dstack.core.model.tables.HostTable.HOST.AGENT_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.HostRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.ZoneRecord> FK_HOST__ZONE_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_ZONE_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.HostTable.HOST, io.github.ibuildthecloud.dstack.core.model.tables.HostTable.HOST.ZONE_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ImageRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.AccountRecord> FK_IMAGE__ACCOUNT_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.ImageTable.IMAGE, io.github.ibuildthecloud.dstack.core.model.tables.ImageTable.IMAGE.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ImageStoragePoolMapRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.ImageRecord> FK_IMAGE_STORAGE_POOL_MAP__IMAGE_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_IMAGE_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP, io.github.ibuildthecloud.dstack.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP.IMAGE_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ImageStoragePoolMapRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolRecord> FK_IMAGE_STORAGE_POOL_MAP__STORAGE_POOL_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_STORAGE_POOL_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP, io.github.ibuildthecloud.dstack.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP.STORAGE_POOL_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.InstanceRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.AccountRecord> FK_INSTANCE__ACCOUNT_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.InstanceTable.INSTANCE, io.github.ibuildthecloud.dstack.core.model.tables.InstanceTable.INSTANCE.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.InstanceRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.ImageRecord> FK_INSTANCE__IMAGE_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_IMAGE_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.InstanceTable.INSTANCE, io.github.ibuildthecloud.dstack.core.model.tables.InstanceTable.INSTANCE.IMAGE_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.InstanceRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.OfferingRecord> FK_INSTANCE__OFFERING_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_OFFERING_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.InstanceTable.INSTANCE, io.github.ibuildthecloud.dstack.core.model.tables.InstanceTable.INSTANCE.OFFERING_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.InstanceRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.ZoneRecord> FK_INSTANCE__ZONE_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_ZONE_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.InstanceTable.INSTANCE, io.github.ibuildthecloud.dstack.core.model.tables.InstanceTable.INSTANCE.ZONE_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.InstanceHostMapRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.InstanceRecord> FK_INSTANCE_HOST_MAP__INSTANCE_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_INSTANCE_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP, io.github.ibuildthecloud.dstack.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP.INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.InstanceHostMapRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.HostRecord> FK_INSTANCE_HOST_MAP__HOST_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_HOST_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP, io.github.ibuildthecloud.dstack.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP.HOST_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.OfferingRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.AccountRecord> FK_OFFERING__ACCOUNT_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.OfferingTable.OFFERING, io.github.ibuildthecloud.dstack.core.model.tables.OfferingTable.OFFERING.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ProcessExecutionRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.ProcessInstanceRecord> FK_PROCESS_EXECUTION_PROCESS_INSTANCE_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_PROCESS_INSTANCE_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.ProcessExecutionTable.PROCESS_EXECUTION, io.github.ibuildthecloud.dstack.core.model.tables.ProcessExecutionTable.PROCESS_EXECUTION.PROCESS_INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.AccountRecord> FK_STORAGE_POOL__ACCOUNT_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolTable.STORAGE_POOL, io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolTable.STORAGE_POOL.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.AgentRecord> FK_STORAGE_POOL__AGENT_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_AGENT_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolTable.STORAGE_POOL, io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolTable.STORAGE_POOL.AGENT_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.ZoneRecord> FK_STORAGE_POOL__ZONE_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_ZONE_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolTable.STORAGE_POOL, io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolTable.STORAGE_POOL.ZONE_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolHostMapRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolRecord> FK_STORAGE_POOL_HOST_MAP__STORAGE_POOL_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_STORAGE_POOL_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP, io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP.STORAGE_POOL_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolHostMapRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.HostRecord> FK_STORAGE_POOL_HOST_MAP__HOST_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_HOST_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP, io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP.HOST_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.TaskInstanceRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.TaskRecord> FK_TASK_INSTANCE__TASK_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_TASK_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.TaskInstanceTable.TASK_INSTANCE, io.github.ibuildthecloud.dstack.core.model.tables.TaskInstanceTable.TASK_INSTANCE.TASK_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.AccountRecord> FK_VOLUME__ACCOUNT_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.VolumeTable.VOLUME, io.github.ibuildthecloud.dstack.core.model.tables.VolumeTable.VOLUME.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.InstanceRecord> FK_VOLUME__INSTANCE_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_INSTANCE_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.VolumeTable.VOLUME, io.github.ibuildthecloud.dstack.core.model.tables.VolumeTable.VOLUME.INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.ImageRecord> FK_VOLUME__IMAGE_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_IMAGE_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.VolumeTable.VOLUME, io.github.ibuildthecloud.dstack.core.model.tables.VolumeTable.VOLUME.IMAGE_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.OfferingRecord> FK_VOLUME__OFFERING_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_OFFERING_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.VolumeTable.VOLUME, io.github.ibuildthecloud.dstack.core.model.tables.VolumeTable.VOLUME.OFFERING_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.ZoneRecord> FK_VOLUME__ZONE_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_ZONE_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.VolumeTable.VOLUME, io.github.ibuildthecloud.dstack.core.model.tables.VolumeTable.VOLUME.ZONE_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeStoragePoolMapRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeRecord> FK_VOLUME_STORAGE_POOL_MAP__VOLUME_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_VOLUME_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP, io.github.ibuildthecloud.dstack.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP.VOLUME_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeStoragePoolMapRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolRecord> FK_VOLUME_STORAGE_POOL_MAP__STORAGE_POOL_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_STORAGE_POOL_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP, io.github.ibuildthecloud.dstack.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP.STORAGE_POOL_ID);
		public static final org.jooq.ForeignKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ZoneRecord, io.github.ibuildthecloud.dstack.core.model.tables.records.AccountRecord> FK_ZONE__ACCOUNT_ID = createForeignKey(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.github.ibuildthecloud.dstack.core.model.tables.ZoneTable.ZONE, io.github.ibuildthecloud.dstack.core.model.tables.ZoneTable.ZONE.ACCOUNT_ID);
	}
}
